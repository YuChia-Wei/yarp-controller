version: "3.9"
services:

  yarp-gateway:
    container_name: yarp-gateway
    image: yarp-gateway:dev
    build:
      context: ../src
      dockerfile: ../src/Gateway/Yarp.Gateway/Dockerfile
    #networks:
      #- yarp-network
    env_file:
      - ./env-file/yarp-gateway-otel.env
    volumes:
      - ./gateway-config/ReverseProxy-ClustersSetting.json:/app/ReverseProxy-ClustersSetting.json
      - ./gateway-config/ReverseProxy-RoutesSetting.json:/app/ReverseProxy-RoutesSetting.json
    depends_on:
      - yarp-controller-webapi
    ports:
      - "8080:80"

  yarp-controller-webapi:
    container_name: yarp-controller-webapi
    image: yarp-controller-webapi:dev
    build:
      context: ../src
      dockerfile: ../src/ControlPlant/Yarp.ControlPlant.WebApi/Dockerfile
    #networks:
      #- yarp-network
    env_file:
      - ./env-file/yarp-controller-webapi-otel.env
    environment:
      - REDISCONNECTION=redis:6379
      - DBCONNECTION=User ID=postgres;Password=mysecretpassword;Host=postgres;Port=5432;Database=postgres;Pooling=true;
    depends_on:
      - redis
      - postgres

  otel-collector-contrib:
    image: otel/opentelemetry-collector-contrib:0.88.0
    restart: always
    container_name: otel-collector-contrib
    command: [ "--config=/etc/otel-collector.yaml" ]
    volumes:
      - ./otel-config/otel-collector-contrib-config.yaml:/etc/otel-collector.yaml
    ports:
      - "4317:4317"
      - "4318:4318"

  postgres:
    image: postgres:16.0-alpine
    restart: always
    container_name: postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
      #POSTGRES_USER: $USER_NAME
      #POSTGRES_PASSWORD: $PASSWORD
      #PGDATA: /var/lib/postgresql/data
    volumes:
      #- db-data:/var/lib/postgresql/data
      # copy the sql script to create tables
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      # copy the sql script to fill tables
      - ./sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    ports:
      - "5432:5432"
    #networks:
      #- yarp-network

  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    ports:
      - "6379:6379"
    #networks:
      #- yarp-network

  # 以下參考 grafana tempo 範例
  # via: https://github.com/grafana/tempo/blob/main/example/docker-compose/otel-collector/docker-compose.yaml
  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./grafana-config/tempo.yaml:/etc/tempo.yaml
#      - ./tempo-data:/tmp/tempo
    ports:
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http

  prometheus:
    container_name: prometheus
    image: prom/prometheus:latest
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./grafana-config/prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  grafana:
    container_name: grafana
    image: grafana/grafana:9.4.3
    volumes:
      - ./grafana-config/provisioning/datasources/datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
      - ./grafana-config/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      - ./grafana-config/dashboards:/var/lib/grafana/dashboards
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor tempoSearch tempoBackendSearch tempoApmTable
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
      - tempo
      - loki

  # 以下參考 grafana loki 範例與其他 github 中找到的範本
  # via: https://github.com/grafana/loki/blob/main/examples/getting-started/docker-compose.yaml
  # via: https://github.com/mnadeem/boot-opentelemetry-tempo/blob/main/docker-compose.yaml
  loki:
    container_name: loki
    image: grafana/loki:2.8.2
    command: -config.file=/etc/loki/config.yaml
    ports:
      - 3102:3100
      - 9095:9095
    volumes:
      - ./grafana-config/loki-local.yaml:/etc/loki/config.yaml

#networks:
#  yarp-network:
#    driver: bridge